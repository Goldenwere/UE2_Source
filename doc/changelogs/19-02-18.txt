==================================================
-------------------------
Version 1.190218.20183.01.02
-------------------------
Description
	This version focused on creating basic entity models for testing, implementing more entity AI logic, and implementing UI states.
Tasks Completed
	Added XML summaries to classes
	Create models for the RFTO and PHE entities
	Create sight cone model to use for sight collision
	Change the entity firing location to base off of gameobject position (like with player) and test alternating shot locations
	Change the requirement for NavMeshAgent to be in child classes of Entity rather than Entity itself
	Implemented a way to restart the demo when killed/when entities killed
	Implemented entity death and player death
	Implemented pause option
	Over-wrote MouseLook's behavior for cursor locking (changed FirstPersonController to remove reference to commented-out method) since it conflicts with own methods and future methods of handling the cursor (and other UI)
	Set escape key to pause menu
	Changed how DevelopersConsole is called (goes through HUDManager first)
	Changed headings in all the classes
	Implemented HUDManager
	Implemented improved entity firing mechanism (based on ray)
-------------------------
Class Changes (does not include third party assets)
Added Classes
	IndevRestart
	IndevPause
Changed Classes
	MouseLook
	FirstPersonController
	EntitySeekCollisionPHE
	RTFO
	PHE
	Entity
	PlayerManager
	DevelopersConsole
	Pistol (comments only)
Removed Classes
	N/A
-------------------------
Third Party Asset Changes (does not include non-implemented)
Added Packages / Code
	N/A
Updated/Changed Packages
	N/A
Removed Packages
	N/A
-------------------------
==================================================



==================================================
-------------------------
Version 1.181226.20183.01.01
-------------------------
Description
	This version focused on creating a basic scene for development testing, implementing basic entity AI (both a tracking entity and a following entity), implementing gun firing, and basic decreasing of entity and player health. A developer's console has been created as well for future development purposes.
Tasks Completed
	Create demo scene
	Create weapon class
	Create pistol class
	Test pistol firing mechanism
	Create entity class
	Create RFTO class
	Test RTFO receiving damage
	Create player class
	Implement sight cone for entity
	Test player receiving damage
	Implement / Test turret object tracking player
	Implement / Test turret only tracking player if in range/in sight cone
	Implement weapon fire rate (pistol only can fire on ButtonDown and only if timer is greater than fire rate)
	Implement ammo (pistol can only fire if enough ammo present)
	Implement entity fire rate (changes how sight cone works)
	Implement entity that follows player (only in range/in sight cone) and does damage
	Fully create demo scene testing these implementations on a larger scale
	Implement particle/sound effects, distinction materials on entities and gun
	Create development console (takes in commands, splits strings, etc.)
-------------------------
Class Changes (does not include third party assets)
Added Classes
	DevelopersConsole
	Weapon
	Pistol
	PistolParticleOut
	PlayerManager
	Entity
	EntitySeekCollision
	PHE
	RFTO
Changed Classes
	N/A
Removed Classes
	N/A
-------------------------
Third Party Asset Changes (does not include non-implemented, such as Advertising, In-App Purchases, TextMeshPro, etc.)
Added Packages
	Post-Processing
	Analytics Library
	High Definition RP
	ProCore (ProBuild, ProGrids, PolyBrush)
	Standard Assets
Updated/Changed Packages
	N/A
Removed Packages
	N/A
-------------------------
==================================================
